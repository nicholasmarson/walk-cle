{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'rewards-comp',\n  data: function data() {\n    return {\n      trophyStatus: {\n        defender: false,\n        bar: false,\n        sport: false,\n        tree: false\n      }\n    };\n  },\n  created: function created() {\n    this.checkTrophyStatus();\n  },\n  methods: {\n    checkTrophyStatus: function checkTrophyStatus() {\n      this.checkDefenderTrophyStatus();\n      this.checkBarTrophyStatus();\n      this.checkParkTrophyStatus();\n      this.checkStadiumTrophyStatus();\n    },\n    checkDefenderTrophyStatus: function checkDefenderTrophyStatus() {\n      var _this = this;\n      axios.get('http://localhost:9000/rewards/allPlacesVisited').then(function (response) {\n        _this.$set(_this.trophyStatus, 'defender', response.data);\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    },\n    checkBarTrophyStatus: function checkBarTrophyStatus() {\n      var _this2 = this;\n      axios.get('http://localhost:9000/rewards/allBarsVisited').then(function (response) {\n        _this2.$set(_this2.trophyStatus, 'bar', response.data);\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    },\n    checkParkTrophyStatus: function checkParkTrophyStatus() {\n      var _this3 = this;\n      axios.get('http://localhost:9000/rewards/allParksVisited').then(function (response) {\n        _this3.$set(_this3.trophyStatus, 'sport', response.data);\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    },\n    checkStadiumTrophyStatus: function checkStadiumTrophyStatus() {\n      var _this4 = this;\n      axios.get('http://localhost:9000/rewards/allStadiumsVisited').then(function (response) {\n        _this4.$set(_this4.trophyStatus, 'tree', response.data);\n      })[\"catch\"](function (error) {\n        console.error(error);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":"AAgBA;AAEA;EACAA;EACAC;IACA;MACAC;QACAC;QACAC;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACA;EACA;EACAC;IACAC;MACA;MACA;MACA;MACA;IACA;IACAC;MAAA;MACAC,4DACAC;QACA;MACA,WACA;QACAC;MACA;IACA;IACAC;MAAA;MACAH,0DACAC;QACA;MACA,WACA;QACAC;MACA;IACA;IACAE;MAAA;MACAJ,2DACAC;QACA;MACA,WACA;QACAC;MACA;IACA;IACAG;MAAA;MACAL,8DACAC;QACA;MACA,WACA;QACAC;MACA;IACA;EACA;AACA","names":["name","data","trophyStatus","defender","bar","sport","tree","created","methods","checkTrophyStatus","checkDefenderTrophyStatus","axios","then","console","checkBarTrophyStatus","checkParkTrophyStatus","checkStadiumTrophyStatus"],"sourceRoot":"src/components","sources":["RewardsComp.vue"],"sourcesContent":["<template>\r\n    <div class=\"container\">\r\n        <div class=\"trophies\">\r\n            <img v-if=\"trophyStatus.defender\" src=\"../assets/trophies/defender.jpg\" id=\"defender\" />\r\n            <img v-else src=\"../assets/trophies/defenderbw.jpg\" id=\"defender\" />\r\n            <img v-if=\"trophyStatus.bar\" src=\"../assets/trophies/bar.jpg\" id=\"bar\" />\r\n            <img v-else src=\"../assets/trophies/barbw.jpg\" id=\"bar\" />\r\n            <img v-if=\"trophyStatus.sport\" src=\"../assets/trophies/sport.jpg\" id=\"sport\" />\r\n            <img v-else src=\"../assets/trophies/sportbw.jpg\" id=\"sport\" />\r\n            <img v-if=\"trophyStatus.tree\" src=\"../assets/trophies/tree.jpg\" id=\"tree\" />\r\n            <img v-else src=\"../assets/trophies/treebw.jpg\" id=\"tree\" />\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    name: 'rewards-comp',\r\n    data() {\r\n        return {\r\n            trophyStatus: {\r\n                defender: false,\r\n                bar: false,\r\n                sport: false,\r\n                tree: false,\r\n            }\r\n        };\r\n    },\r\n    created() {\r\n        this.checkTrophyStatus();\r\n    },\r\n    methods: {\r\n        checkTrophyStatus() {\r\n            this.checkDefenderTrophyStatus();\r\n            this.checkBarTrophyStatus();\r\n            this.checkParkTrophyStatus();\r\n            this.checkStadiumTrophyStatus();\r\n        },\r\n        checkDefenderTrophyStatus() {\r\n            axios.get('http://localhost:9000/rewards/allPlacesVisited')\r\n                .then(response => {\r\n                    this.$set(this.trophyStatus, 'defender', response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        },\r\n        checkBarTrophyStatus() {\r\n            axios.get('http://localhost:9000/rewards/allBarsVisited')\r\n                .then(response => {\r\n                    this.$set(this.trophyStatus, 'bar', response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        },\r\n        checkParkTrophyStatus() {\r\n            axios.get('http://localhost:9000/rewards/allParksVisited')\r\n                .then(response => {\r\n                    this.$set(this.trophyStatus, 'sport', response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        },\r\n        checkStadiumTrophyStatus() {\r\n            axios.get('http://localhost:9000/rewards/allStadiumsVisited')\r\n                .then(response => {\r\n                    this.$set(this.trophyStatus, 'tree', response.data);\r\n                })\r\n                .catch(error => {\r\n                    console.error(error);\r\n                });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.container {\r\n    display: grid;\r\n    grid-template-columns:repeat(auto-fill, minmax(250px, 1fr));\r\n    grid-gap: 10px;\r\n}\r\n\r\nimg {\r\n    max-width: 250px;\r\n    height: auto;\r\n    width: 100%;\r\n}\r\n\r\n@media screen and (max-width: 400px) {\r\n    .container {\r\n        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));\r\n        grid-gap: 5px;\r\n    }\r\n    img {\r\n        max-width: 40%;\r\n    }\r\n}\r\n\r\n#defender {\r\n    grid-area: defender;\r\n}\r\n\r\n#bar {\r\n    grid-area: bar;\r\n}\r\n\r\n#sport {\r\n    grid-area: sport;\r\n}\r\n\r\n#tree {\r\n    grid-area: tree;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport mapboxgl from \"mapbox-gl\";\nimport { MapboxSearchBox } from \"@mapbox/search-js-web\";\nexport default {\n  data: function data() {\n    return {\n      ACCESS_TOKEN: \"pk.eyJ1Ijoid2Fsa2NsZTIxNiIsImEiOiJjbG16MGVvdWkxM2QzMm9wNjNobm9hZGQyIn0.5r382ZeMc0zOhHpiAd9D2A\"\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    // make environment variable\n    mapboxgl.accessToken = \"pk.eyJ1Ijoid2Fsa2NsZTIxNiIsImEiOiJjbG16MGVvdWkxM2QzMm9wNjNobm9hZGQyIn0.5r382ZeMc0zOhHpiAd9D2A\";\n    var latitude, longitude;\n\n    // Initialize the map at the user's location\n    navigator.geolocation.getCurrentPosition(function (position) {\n      latitude = position.coords.latitude;\n      longitude = position.coords.longitude;\n      _this.map = new mapboxgl.Map({\n        container: \"map\",\n        style: \"mapbox://styles/mapbox/streets-v12\",\n        center: [longitude, latitude],\n        // Center the map at the user's location\n        zoom: 15 // Set an initial zoom level\n      });\n\n      var searchBox = new MapboxSearchBox();\n      searchBox.accessToken = _this.ACCESS_TOKEN;\n      searchBox.options = {\n        language: \"en\",\n        country: \"us\"\n      };\n      _this.map.addControl(searchBox);\n\n      // Add Geolocate Control\n      var geolocate = new mapboxgl.GeolocateControl({\n        positionOptions: {\n          enableHighAccuracy: true\n        },\n        trackUserLocation: true,\n        showUserLocation: true\n      });\n      _this.map.addControl(geolocate);\n\n      // Event listener for geolocation update\n      // this.map.on(\"load\", () => {\n      //   geolocate.on(\"geolocate\", (event) => {\n      //     const { coords } = event;\n      //     const { longitude, latitude } = coords;\n\n      //     // Update the map's center to the user's location\n      //     this.map.setCenter([longitude, latitude]);\n\n      //     // Remove the previous user location marker if it exists\n      //     if (this.userLocationMarker) {\n      //       this.userLocationMarker.remove();\n      //     }\n      //     // Create a custom user location marker (blue arrow)\n      //     this.userLocationMarker = new mapboxgl.Marker({\n      //       color: \"#007bff\", // Blue color for the arrow\n      //       rotation: event.coords.heading, // Use the heading to set the arrow's rotation\n      //     })\n      //       .setLngLat([longitude, latitude])\n      //       .addTo(this.map);\n      //   });\n      // });\n    });\n  },\n\n  methods: {\n    // getUserLocation() {\n    //   // Trigger geolocation\n    //   const geolocateButton = document.querySelector(\n    //     \".mapboxgl-ctrl-geolocate\"\n    //   );\n    //   if (geolocateButton) {\n    //     geolocateButton.click();\n    //   }\n    // },\n  }\n};","map":{"version":3,"mappings":";AAOA;AACA;AAEA;EACAA;IACA;MACAC,cACA;IACA;EACA;EACAC;IAAA;IACA;IACAC,uBACA;IAEA;;IAEA;IACAC;MACAC;MACAC;MAEA;QACAC;QACAC;QACAC;QAAA;QACAC;MACA;;MAEA;MACAC;MACAA;QACAC;QACAC;MACA;MACA;;MAEA;MACA;QACAC;UACAC;QACA;QACAC;QACAC;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACA;EACA;;EACAC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA;AAEA","names":["data","ACCESS_TOKEN","mounted","mapboxgl","navigator","latitude","longitude","container","style","center","zoom","searchBox","language","country","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","methods"],"sourceRoot":"src/components","sources":["MapWithSearch.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"map\"></div>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { MapboxSearchBox } from \"@mapbox/search-js-web\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ACCESS_TOKEN:\r\n        \"pk.eyJ1Ijoid2Fsa2NsZTIxNiIsImEiOiJjbG16MGVvdWkxM2QzMm9wNjNobm9hZGQyIn0.5r382ZeMc0zOhHpiAd9D2A\",\r\n    };\r\n  },\r\n  mounted() {\r\n    // make environment variable\r\n    mapboxgl.accessToken =\r\n      \"pk.eyJ1Ijoid2Fsa2NsZTIxNiIsImEiOiJjbG16MGVvdWkxM2QzMm9wNjNobm9hZGQyIn0.5r382ZeMc0zOhHpiAd9D2A\";\r\n\r\n    let latitude, longitude;\r\n\r\n    // Initialize the map at the user's location\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      latitude = position.coords.latitude;\r\n      longitude = position.coords.longitude;\r\n\r\n      this.map = new mapboxgl.Map({\r\n        container: \"map\",\r\n        style: \"mapbox://styles/mapbox/streets-v12\",\r\n        center: [longitude, latitude], // Center the map at the user's location\r\n        zoom: 15, // Set an initial zoom level\r\n      });\r\n\r\n      const searchBox = new MapboxSearchBox();\r\n      searchBox.accessToken = this.ACCESS_TOKEN;\r\n      searchBox.options = {\r\n        language: \"en\",\r\n        country: \"us\",\r\n      };\r\n      this.map.addControl(searchBox);\r\n\r\n      // Add Geolocate Control\r\n      const geolocate = new mapboxgl.GeolocateControl({\r\n        positionOptions: {\r\n          enableHighAccuracy: true,\r\n        },\r\n        trackUserLocation: true,\r\n        showUserLocation: true,\r\n      });\r\n      this.map.addControl(geolocate);\r\n\r\n      // Event listener for geolocation update\r\n      // this.map.on(\"load\", () => {\r\n      //   geolocate.on(\"geolocate\", (event) => {\r\n      //     const { coords } = event;\r\n      //     const { longitude, latitude } = coords;\r\n\r\n      //     // Update the map's center to the user's location\r\n      //     this.map.setCenter([longitude, latitude]);\r\n\r\n      //     // Remove the previous user location marker if it exists\r\n      //     if (this.userLocationMarker) {\r\n      //       this.userLocationMarker.remove();\r\n      //     }\r\n      //     // Create a custom user location marker (blue arrow)\r\n      //     this.userLocationMarker = new mapboxgl.Marker({\r\n      //       color: \"#007bff\", // Blue color for the arrow\r\n      //       rotation: event.coords.heading, // Use the heading to set the arrow's rotation\r\n      //     })\r\n      //       .setLngLat([longitude, latitude])\r\n      //       .addTo(this.map);\r\n      //   });\r\n      // });\r\n    });\r\n  },\r\n  methods: {\r\n    // getUserLocation() {\r\n    //   // Trigger geolocation\r\n    //   const geolocateButton = document.querySelector(\r\n    //     \".mapboxgl-ctrl-geolocate\"\r\n    //   );\r\n    //   if (geolocateButton) {\r\n    //     geolocateButton.click();\r\n    //   }\r\n    // },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 90%;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n}\r\n\r\n#map canvas{\r\n    width: 80vw;\r\n    height: 80vh;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\nimport { MapboxSearchBox } from \"@mapbox/search-js-web\";\nexport default {\n  data: function data() {\n    return {\n      ACCESS_TOKEN: 'pk.eyJ1Ijoid2Fsa2NsZTIxNiIsImEiOiJjbG16MGVvdWkxM2QzMm9wNjNobm9hZGQyIn0.5r382ZeMc0zOhHpiAd9D2A'\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    mapboxgl.accessToken = this.ACCESS_TOKEN;\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v12',\n      center: [-73.99209, 40.68933],\n      zoom: 8.8\n    });\n    var searchBox = new MapboxSearchBox();\n    searchBox.accessToken = this.ACCESS_TOKEN;\n    searchBox.options = {\n      language: 'en',\n      country: 'us'\n    };\n    map.addControl(searchBox);\n\n    // Add Geolocate Control\n    var geolocate = new mapboxgl.GeolocateControl({\n      positionOptions: {\n        enableHighAccuracy: true\n      },\n      trackUserLocation: true,\n      showUserLocation: true\n    });\n    map.addControl(new MapboxGeocoder({\n      accessToken: this.ACCESS_TOKEN,\n      mapboxgl: mapboxgl,\n      types: 'address,poi',\n      proximity: [-73.99209, 40.68933],\n      marker: true\n    }));\n\n    // Add the Geolocate Control to the map\n    map.addControl(geolocate);\n\n    // Event listener for geolocation update\n    map.on('load', function () {\n      geolocate.on('geolocate', function (event) {\n        var coords = event.coords;\n        var longitude = coords.longitude,\n          latitude = coords.latitude;\n\n        // Update the map's center to the user's location\n        map.setCenter([longitude, latitude]);\n\n        // Remove the previous user location marker if it exists\n        if (_this.userLocationMarker) {\n          _this.userLocationMarker.remove();\n        }\n        // Create a custom user location marker (blue arrow)\n        _this.userLocationMarker = new mapboxgl.Marker({\n          color: '#007bff',\n          // Blue color for the arrow\n          rotation: event.coords.heading // Use the heading to set the arrow's rotation\n        }).setLngLat([longitude, latitude]).addTo(map);\n      });\n      _this.map.addControl(new MapboxSearchBox({\n        accessToken: _this.ACCESS_TOKEN\n      }));\n    });\n  },\n  methods: {\n    getUserLocation: function getUserLocation() {\n      // Trigger geolocation\n      var geolocateButton = document.querySelector('.mapboxgl-ctrl-geolocate');\n      if (geolocateButton) {\n        geolocateButton.click();\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";AAQA;AACA;AACA;AAEA;EACAA;IACA;MACAC;IACA;EACA;EACAC;IAAA;IACAC;IACA;MACAC;MACAC;MACAC;MACAC;IACA;IAIA;IACAC;IACAA;MACAC;MACAC;IACA;IACAC;;IAEA;IACA;MACAC;QACAC;MACA;MACAC;MACAC;IACA;IAEAJ,eACA;MACAK;MACAb;MACAc;MACAC;MACAC;IACA,GACA;;IAEA;IACAR;;IAEA;IACAA;MACAS;QACA;QACA;UAAAC;;QAEA;QACAV;;QAEA;QACA;UACA;QACA;QACA;QACA;UACAW;UAAA;UACAC;QACA,GACAC,iCACAC;MACA;MACA,qBACA;QACAT;MACA,GACA;IACA;EACA;EACAU;IACAC;MACA;MACA;MACA;QACAC;MACA;IACA;EACA;AACA","names":["data","ACCESS_TOKEN","mounted","mapboxgl","container","style","center","zoom","searchBox","language","country","map","positionOptions","enableHighAccuracy","trackUserLocation","showUserLocation","accessToken","types","proximity","marker","geolocate","latitude","color","rotation","setLngLat","addTo","methods","getUserLocation","geolocateButton"],"sourceRoot":"src/components","sources":["MapWithSearch.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div id=\"map\" style=\"position: absolute; width: 100%; height: 100%\"></div>\r\n    <mapbox-search-box access-token=\"pk.eyJ1Ijoid2Fsa2NsZTIxNiIsImEiOiJjbG16MGVvdWkxM2QzMm9wNjNobm9hZGQyIn0.5r382ZeMc0zOhHpiAd9D2A\" proximity=\"0,0\"/>\r\n  </div>\r\n</template>\r\n  \r\n<script>\r\nimport mapboxgl from 'mapbox-gl';\r\nimport MapboxGeocoder from '@mapbox/mapbox-gl-geocoder';\r\nimport {MapboxSearchBox} from \"@mapbox/search-js-web\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      ACCESS_TOKEN: 'pk.eyJ1Ijoid2Fsa2NsZTIxNiIsImEiOiJjbG16MGVvdWkxM2QzMm9wNjNobm9hZGQyIn0.5r382ZeMc0zOhHpiAd9D2A',\r\n    };\r\n  },\r\n  mounted() {\r\n    mapboxgl.accessToken = this.ACCESS_TOKEN;\r\n    const map = new mapboxgl.Map({\r\n      container: 'map',\r\n      style: 'mapbox://styles/mapbox/streets-v12',\r\n      center: [-73.99209, 40.68933],\r\n      zoom: 8.8,\r\n    });\r\n\r\n    \r\n\r\n    const searchBox = new MapboxSearchBox();\r\n    searchBox.accessToken = this.ACCESS_TOKEN;\r\n    searchBox.options = {\r\n        language: 'en',\r\n        country: 'us'\r\n    };\r\n    map.addControl(searchBox);\r\n\r\n    // Add Geolocate Control\r\n    const geolocate = new mapboxgl.GeolocateControl({\r\n      positionOptions: {\r\n        enableHighAccuracy: true,\r\n      },\r\n      trackUserLocation: true,\r\n      showUserLocation: true,\r\n    });\r\n\r\n    map.addControl(\r\n      new MapboxGeocoder({\r\n        accessToken: this.ACCESS_TOKEN,\r\n        mapboxgl: mapboxgl,\r\n        types: 'address,poi',\r\n        proximity: [-73.99209, 40.68933],\r\n        marker: true,\r\n      })\r\n    );\r\n\r\n    // Add the Geolocate Control to the map\r\n    map.addControl(geolocate);\r\n\r\n    // Event listener for geolocation update\r\n    map.on('load', () => {\r\n      geolocate.on('geolocate', (event) => {\r\n        const { coords } = event;\r\n        const { longitude, latitude } = coords;\r\n\r\n        // Update the map's center to the user's location\r\n        map.setCenter([longitude, latitude]);\r\n\r\n        // Remove the previous user location marker if it exists\r\n        if (this.userLocationMarker) {\r\n          this.userLocationMarker.remove();\r\n        }\r\n// Create a custom user location marker (blue arrow)\r\n        this.userLocationMarker = new mapboxgl.Marker({\r\n          color: '#007bff', // Blue color for the arrow\r\n          rotation: event.coords.heading, // Use the heading to set the arrow's rotation\r\n        })\r\n          .setLngLat([longitude, latitude])\r\n          .addTo(map);\r\n      });\r\n      this.map.addControl(\r\n        new MapboxSearchBox({\r\n            accessToken: this.ACCESS_TOKEN,\r\n        })\r\n    )\r\n    });\r\n  },\r\n  methods: {\r\n    getUserLocation() {\r\n      // Trigger geolocation\r\n      const geolocateButton = document.querySelector('.mapboxgl-ctrl-geolocate');\r\n      if (geolocateButton) {\r\n        geolocateButton.click();\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  width: 100%;\r\n  height: 90%;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
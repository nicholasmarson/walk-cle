{"ast":null,"code":"import \"core-js/modules/es.json.stringify.js\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nVue.use(Vuex);\n\n/*\r\n * The authorization header is set for axios when you login but what happens when you come back or\r\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\r\n * exists you should set the header so that it will be attached to each request\r\n */\nvar currentToken = localStorage.getItem('token');\nvar currentUser = JSON.parse(localStorage.getItem('user'));\nif (currentToken != null) {\n  axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(currentToken);\n}\nexport default new Vuex.Store({\n  state: {\n    token: currentToken || '',\n    user: currentUser || {}\n  },\n  mutations: {\n    SET_AUTH_TOKEN: function SET_AUTH_TOKEN(state, token) {\n      state.token = token;\n      localStorage.setItem('token', token);\n      axios.defaults.headers.common['Authorization'] = \"Bearer \".concat(token);\n    },\n    SET_USER: function SET_USER(state, user) {\n      state.user = user;\n      localStorage.setItem('user', JSON.stringify(user));\n    },\n    LOGOUT: function LOGOUT(state) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      state.token = '';\n      state.user = {};\n      axios.defaults.headers.common = {};\n    }\n  }\n});","map":{"version":3,"names":["Vue","Vuex","axios","use","currentToken","localStorage","getItem","currentUser","JSON","parse","defaults","headers","common","Store","state","token","user","mutations","SET_AUTH_TOKEN","setItem","SET_USER","stringify","LOGOUT","removeItem"],"sources":["E:/workspace/walk-cle-final-capstone-starter/vue/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\r\nimport Vuex from 'vuex'\r\nimport axios from 'axios'\r\n\r\nVue.use(Vuex)\r\n\r\n/*\r\n * The authorization header is set for axios when you login but what happens when you come back or\r\n * the page is refreshed. When that happens you need to check for the token in local storage and if it\r\n * exists you should set the header so that it will be attached to each request\r\n */\r\nconst currentToken = localStorage.getItem('token')\r\nconst currentUser = JSON.parse(localStorage.getItem('user'));\r\n\r\nif(currentToken != null) {\r\n  axios.defaults.headers.common['Authorization'] = `Bearer ${currentToken}`;\r\n}\r\n\r\nexport default new Vuex.Store({\r\n  state: {\r\n    token: currentToken || '',\r\n    user: currentUser || {}\r\n  },\r\n  mutations: {\r\n    SET_AUTH_TOKEN(state, token) {\r\n      state.token = token;\r\n      localStorage.setItem('token', token);\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\r\n    },\r\n    SET_USER(state, user) {\r\n      state.user = user;\r\n      localStorage.setItem('user',JSON.stringify(user));\r\n    },\r\n    LOGOUT(state) {\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      state.token = '';\r\n      state.user = {};\r\n      axios.defaults.headers.common = {};\r\n    }\r\n  }\r\n})\r\n"],"mappings":";AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,KAAK,MAAM,OAAO;AAEzBF,GAAG,CAACG,GAAG,CAACF,IAAI,CAAC;;AAEb;AACA;AACA;AACA;AACA;AACA,IAAMG,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AAClD,IAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC;AAE5D,IAAGF,YAAY,IAAI,IAAI,EAAE;EACvBF,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,oBAAaR,YAAY,CAAE;AAC3E;AAEA,eAAe,IAAIH,IAAI,CAACY,KAAK,CAAC;EAC5BC,KAAK,EAAE;IACLC,KAAK,EAAEX,YAAY,IAAI,EAAE;IACzBY,IAAI,EAAET,WAAW,IAAI,CAAC;EACxB,CAAC;EACDU,SAAS,EAAE;IACTC,cAAc,0BAACJ,KAAK,EAAEC,KAAK,EAAE;MAC3BD,KAAK,CAACC,KAAK,GAAGA,KAAK;MACnBV,YAAY,CAACc,OAAO,CAAC,OAAO,EAAEJ,KAAK,CAAC;MACpCb,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,oBAAaG,KAAK,CAAE;IACpE,CAAC;IACDK,QAAQ,oBAACN,KAAK,EAAEE,IAAI,EAAE;MACpBF,KAAK,CAACE,IAAI,GAAGA,IAAI;MACjBX,YAAY,CAACc,OAAO,CAAC,MAAM,EAACX,IAAI,CAACa,SAAS,CAACL,IAAI,CAAC,CAAC;IACnD,CAAC;IACDM,MAAM,kBAACR,KAAK,EAAE;MACZT,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;MAChClB,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;MAC/BT,KAAK,CAACC,KAAK,GAAG,EAAE;MAChBD,KAAK,CAACE,IAAI,GAAG,CAAC,CAAC;MACfd,KAAK,CAACQ,QAAQ,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,CAAC;IACpC;EACF;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}